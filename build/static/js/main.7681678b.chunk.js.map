{"version":3,"sources":["FavItemsContext.js","components/NavBar/FavItems.js","components/HeaderApp.js","components/NavBar/OrderPosts.js","components/NavBar/PostsLimit.js","components/NavBar/Search.js","components/NavBar/ToggleView.js","components/NavBar/index.js","components/Posts/ListPostsItem.js","components/Posts/ListPosts.js","components/Posts/GridPostsItem.js","components/Posts/GridPosts.js","utils/fetcher.js","api/index.js","components/Footer/LoadMoreBtn.js","components/Footer/Pagination.js","components/Footer/index.js","conteiners/PostsPage.js","hooks/useDebounce.js","components/Albums/AlbumItem.js","components/Albums/ListAlbums.js","conteiners/AlbumsPage.js","components/PostDetails/Comments.js","components/PostDetails/NewComment.js","conteiners/PostDetailsPage.js","App.js","index.js"],"names":["FavItemsContext","createContext","useFavItems","useContext","FavItemsProvider","children","useState","favPosts","setFavPosts","contextValue","favAlbums","deleteFavItem","favItems","id","setUpdated","filter","el","userId","setFavAlbums","Provider","value","FavItems","setFavItem","location","pathname","className","type","uk-icon","uk-dropdown","map","title","onClick","HeaderApp","activePosts","setActivePosts","activeAlbums","setActiveAlbums","activeLink","uk-navbar","to","OrderPosts","setSortOrder","onChange","e","target","PostsLimit","setlimitPosts","Search","isSearching","setIsSearching","setSearchQuery","uk-search-icon","uk-spinner","style","visibility","placeholder","onInput","ToggleView","viewGrid","viewList","setViewGrid","setViewList","grid","list","NavBar","ListPostsItem","body","isColor","uk-grid","src","alt","width","height","slice","color","preventDefault","length","Date","now","ListPosts","posts","colors","post","some","index","GridPostsItem","GridPosts","fetcher","a","options","fetch","process","method","headers","resp","meta","get","links","json","data","sortPosts","limit","order","serchPosts","page","getPostDetails","getPostComments","getAlbums","getMoreItems","url","start","end","getAllItems","LoadMoreBtn","isLoading","setIsLoading","currentNum","setCurrentNum","Number","Pagination","total","setPage","pagesArr","i","Math","ceil","push","href","uk-pagination-previous","uk-pagination-next","Footer","currentNumOfItems","setCurrentNumOfItems","setItems","initialRender","useRef","useEffect","current","then","items","setTimeout","PostsPage","setPosts","pagePosts","setPagePosts","sortOrder","limitPosts","currentNumOfPosts","setCurrentNumOfPosts","searchQuery","totalPosts","setTotalPosts","initialPostsRender","debouncedValue","val","delay","setDebouncedValue","handler","clearTimeout","useDebounce","React","memo","AlbumItem","ListAlbums","albums","album","AlbumsPage","setAlbums","limitAlbums","currentNumOfAlbums","setCurrentNumOfAlbums","Comments","comments","comment","name","toUpperCase","email","NewComment","setComments","userName","setUserName","userEmail","setUserEmail","commentText","setCommentText","action","onSubmit","reset","required","rows","PostDetailsPage","match","params","currentPost","setCurrentPost","history","back","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wKAEMA,EAAkBC,0BAExB,SAASC,IACL,OAAOC,qBAAWH,GAGtB,SAASI,EAAT,GAAyC,IAAbC,EAAY,EAAZA,SACxB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAkCF,mBAAS,IAA3C,mBAMMG,EAAe,CACjBF,WACAG,UARJ,KASIC,cAPkB,SAACC,EAAUC,EAAIC,GACjCA,EAAWF,EAASG,QAAO,SAAAC,GAAE,OAAIA,EAAGC,SAAWJ,OAO/CL,cACAU,aAXJ,MAcA,OACI,cAAClB,EAAgBmB,SAAjB,CAA0BC,MAAOX,EAAjC,SACKJ,ICxBN,IAAMgB,EAAW,WACpB,IAEIT,EAAUU,EAFd,EAA0EpB,IAAlEK,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,cAAeH,EAA5C,EAA4CA,YAAaU,EAAzD,EAAyDA,aAWzD,MARyB,WAAtBK,SAASC,UACRZ,EAAWL,EACXe,EAAad,IAEbI,EAAWF,EACXY,EAAaJ,GAIb,qCACI,wBACIO,UAAU,4BACVC,KAAK,SACLC,UAAQ,0BAGZ,qBAAKF,UAAU,6BAA6BG,cAAY,cAAxD,SACI,qBAAKH,UAAU,wCAAf,SACI,8BACI,wBAAOA,UAAU,6CAAjB,UACI,gCACI,+BACI,uCACA,oBAAIA,UAAU,gBAAd,yBAGR,gCACKb,EAASiB,KAAI,SAAAb,GACV,OACI,+BACI,6BAAKA,EAAGc,QACR,oBAAIL,UAAU,gBAAd,SACI,wBACIA,UAAU,YACVC,KAAK,SACLC,UAAQ,eACRI,QAAS,WAAOpB,EAAcC,EAAUI,EAAGC,OAAQK,UAPtDN,EAAGC,0BChCvCe,EAAY,WACrB,MAAsC1B,mBAAS,aAA/C,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAAwC5B,mBAAS,IAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KAEMC,EAAa,WACW,YAAtBd,SAASC,UACTU,EAAe,IACfE,EAAgB,eAEhBF,EAAgB,aAChBE,EAAgB,MAIxB,OACI,sBAAKX,UAAU,gCAAgCa,YAAU,QAAzD,UACI,qBAAKb,UAAU,iBAAf,SACI,qBAAIA,UAAU,gBAAd,UACI,oBACIM,QAASM,EACTZ,UAAWQ,EAFf,SAII,cAAC,IAAD,CAAMM,GAAG,SAAT,qBAEJ,oBACIR,QAASM,EACTZ,UAAWU,EAFf,SAII,cAAC,IAAD,CAAMI,GAAG,UAAT,2BAKZ,qBAAKd,UAAU,kBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,cAAC,EAAD,YCvCPe,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3B,OACI,yBACEhB,UAAU,+CACViB,SAAU,SAACC,GACTF,EAAaE,EAAEC,OAAOxB,QAH1B,UAME,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,sBCTKyB,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3B,OACE,yBACArB,UAAU,0CACViB,SAAU,SAACC,GACTG,EAAcH,EAAEC,OAAOxB,QAHzB,UAMA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,oBCVS2B,EAAS,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eAClD,OACI,uBAAMzB,UAAU,+EAAhB,UACI,sBAAM0B,iBAAe,OAAO1B,UAAU,2BACtC,sBACIA,UAAU,qCACV2B,aAAW,aACXC,MAAO,CAACC,WAAYN,EAAc,GAAK,YAE3C,uBACIvB,UAAU,kBACVC,KAAK,SACL6B,YAAY,YACZC,QAAS,SAACb,GACNM,GAAe,GACfC,EAAeP,EAAEC,OAAOxB,cCf/BqC,EAAa,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAEhDC,EAAOJ,EAAW,YAAc,GAChCK,EAAOJ,EAAW,YAAc,GAEtC,OACE,sBAAKlC,UAAU,iCAAf,UACE,wBACEA,UAAW,8BAAgCqC,EAC3C/B,QAAS,WACP6B,GAAY,GACZC,GAAY,IAJhB,SAOE,sBAAMlC,UAAQ,kBAEhB,wBACEF,UAAW,8BAAgCsC,EAC3ChC,QAAS,WAAO6B,GAAY,GAAQC,GAAY,IAFlD,SAKE,sBAAMlC,UAAQ,sBChBfqC,EAAS,SAAC,GAUf,IATJvB,EASG,EATHA,aACAK,EAQG,EARHA,cACAG,EAOG,EAPHA,eACAD,EAMG,EANHA,YACAE,EAKG,EALHA,eACAQ,EAIG,EAJHA,SACAE,EAGG,EAHHA,YACAD,EAEG,EAFHA,SACAE,EACG,EADHA,YAEA,OACI,qCACI,cAAC,EAAD,CACIZ,eAAgBA,EAChBD,YAAaA,EACbE,eAAgBA,IAEpB,cAAC,EAAD,CAAYT,aAAcA,IAC1B,cAAC,EAAD,CAAYK,cAAeA,IAE3B,cAAC,EAAD,CACIY,SAAUA,EACVE,YAAaA,EACbD,SAAUA,EACVE,YAAaA,Q,OC3BhBI,EAAgB,SAAC,GAAkC,IAAhCnC,EAA+B,EAA/BA,MAAOoC,EAAwB,EAAxBA,KAAMrD,EAAkB,EAAlBA,GAAIsD,EAAc,EAAdA,QAC/C,EAAkCjE,IAA1BK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAElB,OACE,8BACE,sBACEiB,UAAU,0GACV2C,UAAQ,OAFV,UAIE,sBAAK3C,UAAU,wDAAf,UACE,qBAAK4C,IAAI,gCAAgCC,IAAI,GAAG7C,UAAU,aAC1D,wBAAQ8C,MAAM,MAAMC,OAAO,WAE7B,qBAAK/C,UAAU,GAAf,SACE,sBAAKA,UAAU,eAAf,UACI,qBAAIA,UAAU,+EAAd,oBACMK,EAAM2C,MAAM,EAAG,GADrB,OAEE,mBACEhD,UAAU,eACVE,UAAQ,QACR0B,MAAO,CAAC,OAAU,UAAWqB,MAAOP,EAAU,MAAQ,IACtDpC,QAAS,SAACY,GACRA,EAAEgC,iBAC8C,IAAhDpE,EAASQ,QAAO,SAAAC,GAAE,OAAIA,EAAGH,KAAOA,KAAK+D,QACnCpE,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAACM,KAAIiB,QAAOoC,OAAMjD,OAAQ4D,KAAKC,WAG/DzB,MAAO,CAAC,OAAU,UAAWqB,MAAOP,EAAU,MAAQ,IAVtD,kBAaJ,sCACMD,EAAKO,MAAM,EAAG,IADpB,SAGA,cAAC,IAAD,CACElC,GAAE,iBAAY1B,GACdY,UAAU,2BAFZ,kCCjCCsD,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChBzE,EAAaL,IAAbK,SACF0E,EAASD,EAAMnD,KAAI,SAAAqD,GAAI,OAAI3E,EAAS4E,MAAK,SAAAnE,GAAE,OAAKA,EAAGH,IAAMqE,EAAKrE,SAEpE,OACI,mCACKmE,EAAMnD,KAAI,SAACqD,EAAME,GACd,OAAO,cAAC,EAAD,CACHjB,QAASc,EAAOG,GAEhBvE,GAAIqE,EAAKrE,GACTiB,MAAOoD,EAAKpD,MACZoC,KAAMgB,EAAKhB,MAHNgB,EAAKrE,UCTjBwE,EAAgB,SAAC,GAAkC,IAAhCvD,EAA+B,EAA/BA,MAAOoC,EAAwB,EAAxBA,KAAMrD,EAAkB,EAAlBA,GAAIsD,EAAc,EAAdA,QAC/C,EAAkCjE,IAA1BK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAEhB,OACE,8BACE,sBAAKiB,UAAU,kDAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAIA,UAAU,+EAAd,UACGK,GAAK,UAAOA,EAAM2C,MAAM,EAAG,IAAtB,OACN,mBACEhD,UAAU,eACVE,UAAQ,QACRI,QAAS,SAACY,GACRA,EAAEgC,iBAC8C,IAAhDpE,EAASQ,QAAO,SAAAC,GAAE,OAAIA,EAAGH,KAAOA,KAAK+D,QACnCpE,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAACM,KAAIiB,QAAOoC,OAAMjD,OAAQ4D,KAAKC,WAG7DzB,MAAO,CAAC,OAAU,UAAWqB,MAAOP,EAAU,MAAQ,IATxD,oBAaJ,qBAAK1C,UAAU,eAAf,SACE,6CAAOyC,QAAP,IAAOA,OAAP,EAAOA,EAAMO,MAAM,EAAG,KAAtB,WAEF,qBAAKhD,UAAU,iBAAf,SACE,cAAC,IAAD,CACEc,GAAE,iBAAY1B,GACdY,UAAU,2BAFZ,+BC1BC6D,EAAY,SAAC,GAAe,IAAbN,EAAY,EAAZA,MAChBzE,EAAaL,IAAbK,SACF0E,EAASD,EAAMnD,KAAI,SAAAqD,GAAI,OAAI3E,EAAS4E,MAAK,SAAAnE,GAAE,OAAKA,EAAGH,IAAMqE,EAAKrE,SAEpE,OACI,mCACKmE,EAAMnD,KAAI,SAACqD,EAAME,GACd,OAAO,cAAC,EAAD,CACHjB,QAASc,EAAOG,GAEhBvE,GAAIqE,EAAKrE,GACTiB,MAAOoD,EAAKpD,MACZoC,KAAMgB,EAAKhB,MAHNgB,EAAKrE,U,gCC4Bf0E,EAxCF,uCAAG,WAAO/D,GAAP,mCAAAgE,EAAA,6DAAiBC,EAAjB,+BAA2B,GAA3B,kBAMWC,MAAM,GAAD,OAAIC,wCAAJ,OAAoCnE,GAApC,aACpBoE,OAAQ,MACRC,QAAS,CAAE,OAAU,mBAAmB,eAAgB,qBACrDJ,IATC,cAMFK,EANE,OAYFC,EAAO,GAECD,EAAKD,QAAQG,IAAI,kBAEzBC,EAAQH,EAAKD,QAAQG,IAAI,WAS3BD,EAAKE,MAAQA,GAzBT,UA4BWH,EAAKI,OA5BhB,eA4BFC,EA5BE,yBA8BD,CACHA,OACAJ,SAhCI,+GAAH,sDCEPK,EAAS,uCAAG,WAAOC,GAAP,2BAAAb,EAAA,6DAAec,EAAf,+BAAuB,MAAvB,SAEDf,EAAQ,iBAAD,OAAkBc,EAAlB,4BAA2CC,IAFjD,mFAAH,sDAKTC,EAAU,uCAAG,WAAOF,GAAP,+BAAAb,EAAA,6DAAegB,EAAf,+BAAsB,IAAKF,EAA3B,+BAAmC,MAAOxE,EAA1C,+BAAkD,GAAlD,SAEFyD,EAAQ,iBAAD,OAAkBc,EAAlB,kBAAiCG,EAAjC,4BAAyDF,EAAzD,uBAA6ExE,IAFlF,mFAAH,sDAKV2E,EAAc,uCAAG,WAAO5F,GAAP,SAAA2E,EAAA,sEAEND,EAAQ,aAAD,OAAc1E,IAFf,mFAAH,sDAKd6F,EAAe,uCAAG,WAAO7F,GAAP,SAAA2E,EAAA,sEAEPD,EAAQ,oBAAD,OAAqB1E,IAFrB,mFAAH,sDAKf8F,EAAS,uCAAG,WAAON,GAAP,SAAAb,EAAA,sEAEDD,EAAQ,kBAAD,OAAmBc,IAFzB,mFAAH,sDAKTO,EAAY,uCAAG,WAAOC,EAAKC,EAAOC,EAAKT,GAAxB,SAAAd,EAAA,sEAEJD,EAAQ,GAAD,OAAIsB,EAAJ,mBAAkBC,EAAlB,iBAAgCC,EAAhC,4BAAuDT,IAF1D,mFAAH,4DAKZU,EAAW,uCAAG,WAAOH,GAAP,SAAArB,EAAA,sEACHD,EAAQ,GAAD,OAAIsB,IADR,mFAAH,sDChCJI,EAAc,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,UAAWC,EAAoD,EAApDA,aAAcd,EAAsC,EAAtCA,MAAOe,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cACrE,OACI,qBAAK5F,UAAU,YAAf,SACE,yBACEA,UAAU,kEACVM,QAAS,WACPoF,GAAa,GACbE,EAAcC,OAAOF,GAAcE,OAAOjB,KAJ9C,sBAOE,qBACE5E,UAAU,uBACV2B,aAAW,aACXC,MAAO,CAACC,WAAY4D,EAAY,GAAK,kBCbtCK,EAAa,SAAC,GAEzB,IAF4D,IAAlCC,EAAiC,EAAjCA,MAAOnB,EAA0B,EAA1BA,MAAOG,EAAmB,EAAnBA,KAAMiB,EAAa,EAAbA,QACxCC,EAAW,GACRC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAMnB,GAAQsB,IAC3CD,EAASI,KAAKH,GAEhB,OACE,qBAAIlG,UAAU,wDAAd,UACE,6BACG+E,EAAO,GACR,mBACEuB,KAAK,IACLhG,QAAS,SAACY,GACRA,EAAEgC,iBACF8C,EAAQjB,EAAO,IAJnB,SAMC,sBAAM/E,UAAU,iCAAiCuG,yBAAuB,aAI1EN,EAAS7F,KAAI,SAAAb,GACZ,OAAGA,IAAOwF,EACA,oBAAa/E,UAAU,YAAvB,SAAmC,+BAAOT,KAAjCA,GAEZ,6BACH,mBACE+G,KAAK,IACLhG,QAAS,SAACY,GACRA,EAAEgC,iBACF8C,EAAQzG,IAJZ,SAMEA,KAPUA,MAUlB,6BACGwF,EAAOkB,EAAS9C,QACjB,mBACEmD,KAAK,IACLhG,QAAS,SAACY,GACRA,EAAEgC,iBACF8C,EAAQjB,EAAO,IAJnB,SAMC,sBAAM/E,UAAU,6BAA6BwG,qBAAmB,iBCpC5DC,EAAS,SAAC,GAUZ,IAAD,IATF7B,aASE,MATM,EASN,EARF8B,EAQE,EARFA,kBACAC,EAOE,EAPFA,qBAEAjC,GAKE,EANFG,MAME,EALFH,MACAkC,EAIE,EAJFA,SACAb,EAGE,EAHFA,MACAhB,EAEE,EAFFA,KACAiB,EACE,EADFA,QAEJ,EAAkCnH,oBAAS,GAA3C,mBAAO4G,EAAP,KAAkBC,EAAlB,KACA,EAAoC7G,mBAAS6H,GAA7C,mBAAOf,EAAP,KAAmBC,EAAnB,KACMR,EAAMtF,SAASC,SACf8G,EAAgBC,kBAAO,GAkB7B,OAhBAC,qBAAU,WAEHF,EAAcG,QACbH,EAAcG,SAAU,GAExB7B,EAAaC,EAAKO,EAAYE,OAAOF,GAAcE,OAAOjB,GAAgB,OAAOqC,MAC7E,SAAAC,GAAK,OAAIN,EAAS,GAAD,mBAAKlC,GAAL,YAAcwC,EAAMxC,WAGzCiC,EAAqBhB,GACrBwB,YAAW,WAAKzB,GAAa,KAAS,QAI3C,CAACC,IAGC,sBAAK3F,UAAU,yBAAf,UACD,cAAC,EAAD,CACI+F,MAAOA,EACPnB,MAAOA,EACPG,KAAMA,EACNiB,QAASA,IAEb,cAAC,EAAD,CACIP,UAAWA,EACXC,aAAcA,EACdd,MAAOA,EACPe,WAAYA,EACZC,cAAeA,QCxCrBwB,EAAY,WAEhB,MAA0BvI,mBAAS,IAAnC,mBAAO0E,EAAP,KAAc8D,EAAd,KACA,EAAkCxI,mBAAS,GAA3C,mBAAOyI,EAAP,KAAkBC,EAAlB,KACA,EAAkC1I,mBAAS,OAA3C,mBAAO2I,EAAP,KAAkBxG,EAAlB,KACA,EAAoCnC,mBAAS,GAA7C,mBAAO4I,EAAP,KAAmBpG,EAAnB,KACA,EAAkDxC,mBAAS4I,GAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAsC9I,oBAAS,GAA/C,mBAAO0C,EAAP,KAAoBC,EAApB,KACA,EAAsC3C,mBAAS,IAA/C,mBAAO+I,EAAP,KAAoBnG,EAApB,KACA,EAAgC5C,oBAAS,GAAzC,mBAAOoD,EAAP,KAAiBE,EAAjB,KACA,EAAgCtD,oBAAS,GAAzC,mBAAOqD,EAAP,KAAiBE,EAAjB,KACA,EAAoCvD,qBAApC,mBAAOgJ,EAAP,KAAmBC,EAAnB,KACMC,EAAqBjB,kBAAO,GAC5BkB,ECrBmB,SAAEC,EAAKC,GAC9B,MAA4CrJ,mBAASoJ,GAArD,mBAAOD,EAAP,KAAuBG,EAAvB,KAaA,OAXApB,qBAAU,WACN,IAAMqB,EAAUjB,YAAW,WACvBgB,EAAkBF,KACnBC,GAEH,OAAO,WACHG,aAAaD,MAGlB,CAACH,EAAKC,IAEFF,EDOcM,CAAYV,EAAa,KAuBhD,OArBAb,qBAAU,WACNpC,EAAU8C,EAAYD,GACnBP,MAAK,SAAA1D,GAAU8D,EAAS9D,EAAMmB,WAClC,CAAC8C,EAAWC,IAEfV,qBAAU,WACJgB,EAAmBf,QACrBe,EAAmBf,SAAU,GAE7BlC,EAAW2C,EAAYH,EAAWE,EAAWQ,GAC1Cf,MAAK,SAAA1D,GAAK,OAAI8D,EAAS9D,EAAMmB,SAC9ByC,YAAW,WAAK3F,GAAe,KAAS,SAG3C,CAACoG,EAAaN,IAEjBP,qBAAU,WACRxB,EAAYzF,SAASC,UAClBkH,MAAK,SAAA1D,GAAK,OAAIuE,EAAcvE,EAAMmB,KAAKvB,aACzC,IAGD,sBAAKnD,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,kCAAf,SACE,cAAC,EAAD,CACEgB,aAAcA,EACdK,cAAeA,EACfE,YAAaA,EACbC,eAAgBA,EAChBC,eAAgBA,EAChBQ,SAAUA,EACVE,YAAaA,EACbD,SAAUA,EACVE,YAAaA,MAGjB,qBAAKpC,UAAU,oDAAf,SAEEiC,EACE,cAAC,EAAD,CAAWsB,MAAOA,IAClB,cAAC,EAAD,CAAWA,MAAOA,SAI1B,cAAC,EAAD,CACEqB,MAAO6C,EACPf,kBAAmBgB,EACnBf,qBAAsBgB,EACtB9C,MAAO2C,EACP9C,KAAMnB,EACNqD,SAAUS,EACVtB,MAAO8B,EACP9C,KAAMuC,EACNtB,QAASuB,QAMFgB,MAAMC,KAAKpB,GEnFbqB,EAAY,SAAC,GAA4B,IAA1BrJ,EAAyB,EAAzBA,GAAIiB,EAAqB,EAArBA,MAAOqC,EAAc,EAAdA,QACnC,EAAoCjE,IAA5BQ,EAAR,EAAQA,UAAWQ,EAAnB,EAAmBA,aACnB,OACI,8BACI,sBAAKO,UAAU,2DAAf,UACI,qBAAK4C,IAAI,gCAAgCC,IAAI,GAAG7C,UAAU,WAAW8C,MAAM,SAC3E,wBAAQA,MAAM,MAAMC,OAAO,QAC3B,qBAAK/C,UAAU,yCACf,qBAAKA,UAAU,mDAAf,SACI,kCAAKK,EAAL,SAGJ,qBAAKL,UAAU,mCAAf,SACI,mBACIsG,KAAK,GACLtG,UAAU,UACVE,UAAQ,wBACRI,QAAS,SAACY,GACNA,EAAEgC,iBAC+C,IAAjDjE,EAAUK,QAAO,SAAAC,GAAE,OAAIA,EAAGH,KAAOA,KAAK+D,QACpC1D,EAAa,GAAD,mBAAKR,GAAL,CAAgB,CAACG,KAAIiB,QAAOb,OAAQ4D,KAAKC,WAGzDzB,MAAO,CAAC,OAAU,UAAWqB,MAAOP,EAAU,MAAQ,cCtBnEgG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB1J,EAAcR,IAAdQ,UACFuE,EAASmF,EAAOvI,KAAI,SAAAwI,GAAK,OAAI3J,EAAUyE,MAAK,SAAAnE,GAAE,OAAKA,EAAGH,IAAMwJ,EAAMxJ,SACxE,OACI,mCACKuJ,EAAOvI,KAAI,SAACwI,EAAOjF,GAChB,OAAO,cAAC,EAAD,CACHjB,QAASc,EAAOG,GAEhBtD,MAAOuI,EAAMvI,MACbjB,GAAIwJ,EAAMxJ,IAFLwJ,EAAMxJ,UCJzByJ,EAAa,WACf,MAA4BhK,mBAAS,IAArC,mBAAO8J,EAAP,KAAeG,EAAf,KACA,EAAsCjK,mBAAS,GAA/C,mBAAOkK,EAAP,KACA,GADA,KACoDlK,mBAASkK,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KAUA,OARAlC,qBAAU,WACR7B,EAAU6D,GAAa9B,MACrB,SAAA0B,GACEG,EAAUH,EAAOjE,WAGxB,IAGK,sBAAK1E,UAAU,aAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,oDAAf,SACI,cAAC,EAAD,CAAY2I,OAAQA,QAG5B,cAAC,EAAD,CACE/D,MAAOmE,EACPrC,kBAAmBsC,EACnBrC,qBAAsBsC,EACtBvE,KAAMiE,EACN/B,SAAUkC,QAMTP,MAAMC,KAAKK,GCtCbK,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKnJ,UAAU,cAAf,gBACGmJ,QADH,IACGA,OADH,EACGA,EAAU/I,KAAI,SAAAgJ,GAAO,OACpB,0BAAsCpJ,UAAU,aAAhD,UACE,wBAAQA,UAAU,0DAAlB,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,oCAAd,SACE,mBACEA,UAAU,gBACVsG,KAAK,IACLhG,QAAS,SAAAY,GAAC,OAAIA,EAAEgC,kBAHlB,SAIEkG,EAAQC,KAAKC,cAActG,MAAM,EAAE,QAEvC,oBAAIhD,UAAU,mEAAd,SACE,6BAAI,mBAAGsG,KAAK,IAAR,SAAa8C,EAAQG,iBAI/B,qBAAKvJ,UAAU,kBAAf,SACE,4BAAIoJ,EAAQ3G,SAEd,yBAlBF,UAAiB2G,EAAQhK,GAAzB,kBCFKoK,EAAa,SAAC,GAA6B,IAA5BL,EAA2B,EAA3BA,SAAUM,EAAiB,EAAjBA,YACpC,EAAgC5K,mBAAS,IAAzC,mBAAO6K,EAAP,KAAiBC,EAAjB,KACA,EAAkC9K,mBAAS,IAA3C,mBAAO+K,EAAP,KAAkBC,EAAlB,KACA,EAAsChL,mBAAS,IAA/C,mBAAOiL,EAAP,KAAoBC,EAApB,KAEA,OACE,sBACEC,OAAO,IACPhK,UAAU,uCACViK,SAAU,SAAC/I,GACTA,EAAEgC,iBAEF,IAAMkG,EAAU,CACdC,KAAMK,EACNH,MAAOK,EACPnH,KAAMqH,GAERL,EAAY,GAAD,mBAAKN,GAAL,CAAeC,KAC1BlI,EAAEC,OAAO+I,SAZb,SAeE,2BAAUlK,UAAU,cAApB,UACI,wBAAQA,UAAU,YAAlB,yBACA,qBAAKA,UAAU,YAAf,SACE,uBACEA,UAAU,WACVC,KAAK,OACL6B,YAAY,OACZqI,UAAQ,EACRpI,QAAS,SAAAb,GAAC,OAAIyI,EAAYzI,EAAEC,OAAOxB,YAGvC,qBAAKK,UAAU,YAAf,SACE,uBACEA,UAAU,WACVC,KAAK,QACL6B,YAAY,QACZqI,UAAQ,EACRpI,QAAS,SAAAb,GAAC,OAAI2I,EAAa3I,EAAEC,OAAOxB,YAGxC,qBAAKK,UAAU,YAAf,SACE,0BACEA,UAAU,cACVoK,KAAK,IACLtI,YAAY,UACZqI,UAAQ,EACRpI,QAAS,SAAAb,GAAC,OAAI6I,EAAe7I,EAAEC,OAAOxB,YAG1C,qBAAKK,UAAU,YAAf,SACE,wBACEA,UAAU,8BACVC,KAAK,SAFP,kCChDCoK,EAAkB,SAAC,GAIzB,IAFOjL,EAER,EAHJkL,MACEC,OAAUnL,GAGZ,EAAsCP,mBAAS,IAA/C,mBAAO2L,EAAP,KAAoBC,EAApB,KACA,EAAgC5L,mBAAS,IAAzC,mBAAOsK,EAAP,KAAiBM,EAAjB,KAeA,OAbA1C,qBAAU,WACR/B,EAAe5F,GAAI6H,MACjB,SAAAxD,GAAI,OAAIgH,EAAehH,EAAKiB,KAAK,SAGlC,CAACtF,IAEJ2H,qBAAU,WACR9B,EAAgB7F,GAAI6H,MAClB,SAAAkC,GAAQ,OAAIM,EAAYN,EAASzE,WAElC,CAACtF,IAGF,qBAAKY,UAAU,aAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBACEA,UAAU,8BACVM,QAAS,SAACY,GACRA,EAAEgC,iBACFwH,QAAQC,QAJZ,kBAOA,qBAAI3K,UAAU,4CAAd,UACE,+BAAOwK,EAAYnK,QACnB,mBAAGL,UAAU,gBAAgBsG,KAAK,IAAlC,2BAAkDkE,EAAYhL,aAEhE,qBAAKQ,UAAU,+CAAf,SACE,4BAAIwK,EAAY/H,SAElB,uBACA,oBAAIzC,UAAU,uBAAd,uBACA,cAAC,EAAD,CAAUmJ,SAAUA,IACpB,cAAC,EAAD,CACEA,SAAUA,EACVM,YAAaA,UCzCR,SAASmB,IAEtB,OACE,sBAAM5K,UAAU,UAAhB,SACE,cAACrB,EAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkM,OAAK,EAACC,KAAK,SAASC,UAAW3D,IACtC,cAAC,IAAD,CAAO0D,KAAK,UAAUC,UAAWlC,IACjC,cAAC,IAAD,CAAOiC,KAAK,aAAaC,UAAWV,IACpC,cAAC,IAAD,CAAUvJ,GAAG,qBCdzB,IAAMkK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACR,EAAD,MAEFI,K","file":"static/js/main.7681678b.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst FavItemsContext = createContext();\r\n\r\nfunction useFavItems(){\r\n    return useContext(FavItemsContext)\r\n};\r\n\r\nfunction FavItemsProvider({ children }) {\r\n    const [favPosts, setFavPosts] = useState([]);\r\n        \r\n    const [favAlbums, setFavAlbums] = useState([]);\r\n\r\n    const deleteFavItem = (favItems, id, setUpdated) => {\r\n        setUpdated(favItems.filter(el => el.userId !== id));\r\n    };\r\n\r\n    const contextValue = {\r\n        favPosts,\r\n        favAlbums, \r\n        deleteFavItem,\r\n        setFavPosts,\r\n        setFavAlbums,   \r\n      };\r\n\r\n    return ( \r\n        <FavItemsContext.Provider value={contextValue}>\r\n            {children}\r\n        </FavItemsContext.Provider>\r\n    )\r\n};\r\n\r\nexport { useFavItems, FavItemsProvider };\r\n\r\n","\r\nimport { useFavItems } from '../../FavItemsContext';\r\n\r\nexport const FavItems = () => {\r\n    const { favPosts, favAlbums, deleteFavItem, setFavPosts, setFavAlbums } = useFavItems();\r\n\r\n    let favItems, setFavItem;\r\n    if(location.pathname === \"/posts\"){\r\n        favItems = favPosts;\r\n        setFavItem = setFavPosts\r\n    } else {\r\n        favItems = favAlbums;\r\n        setFavItem = setFavAlbums\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button \r\n                className=\"uk-button uk-open uk-icon\" \r\n                type=\"button\" \r\n                uk-icon=\"icon: heart; ratio: 2\"\r\n            >\r\n            </button>\r\n            <div className=\"uk-width-large uk-dropdown\" uk-dropdown=\"mode: click\">\r\n                <div className=\"uk-dropdown-grid uk-child-width-1-1@m\">\r\n                    <div>\r\n                        <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Title</th>\r\n                                    <th className=\"uk-text-right\">Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {favItems.map(el=> {\r\n                                    return (\r\n                                        <tr key={el.userId}>\r\n                                            <td>{el.title}</td>\r\n                                            <td className=\"uk-text-right\">\r\n                                                <button \r\n                                                    className=\"uk-button\" \r\n                                                    type=\"button\" \r\n                                                    uk-icon=\"icon: close;\"\r\n                                                    onClick={() => {deleteFavItem(favItems, el.userId, setFavItem)}}\r\n                                                >\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )    \r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n   \r\n} ","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { FavItems } from \"./NavBar/FavItems\";\r\n\r\nexport const HeaderApp = () => {\r\n    const [activePosts, setActivePosts] = useState(\"uk-active\")\r\n    const [activeAlbums, setActiveAlbums] = useState(\"\")\r\n\r\n    const activeLink = () => {\r\n        if( location.pathname === \"/albums\") {\r\n            setActivePosts(\"\");\r\n            setActiveAlbums(\"uk-active\");\r\n        } else {\r\n            setActivePosts (\"uk-active\");\r\n            setActiveAlbums(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"false\" >\r\n            <div className=\"uk-navbar-left\">\r\n                <ul className=\"uk-navbar-nav\">\r\n                    <li \r\n                        onClick={activeLink}\r\n                        className={activePosts}\r\n                    >\r\n                        <Link to=\"/posts\">Posts</Link>\r\n                    </li>\r\n                    <li \r\n                        onClick={activeLink}\r\n                        className={activeAlbums} \r\n                    >\r\n                        <Link to=\"/albums\">Albums</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            \r\n            <div className=\"uk-navbar-right\">\r\n                <div className=\"uk-navbar-item\">\r\n                    <FavItems/>                \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const OrderPosts = ( {setSortOrder} ) => {\r\n  return (\r\n      <select \r\n        className=\"uk-select uk-width-small uk-margin-auto-left\"\r\n        onChange={(e)=>{\r\n          setSortOrder(e.target.value) \r\n        }}\r\n      >\r\n        <option value=\"asc\">ASC</option>\r\n        <option value=\"desc\">DESC</option>\r\n    </select>\r\n  )\r\n} ","export const PostsLimit = ( {setlimitPosts} ) => {\r\n  return (\r\n    <select \r\n    className=\"uk-select uk-width-small uk-margin-left\"\r\n    onChange={(e)=>{\r\n      setlimitPosts(e.target.value)\r\n    }}\r\n    >\r\n    <option value=\"6\">6</option>\r\n    <option value=\"12\">12</option>\r\n    <option value=\"24\">24</option>\r\n  </select>\r\n  )\r\n}","export const Search = ({ isSearching, setIsSearching, setSearchQuery }) => {\r\n    return (\r\n        <form className=\"uk-search uk-search-default uk-width-medium uk-margin-remove uk-margin-right\">\r\n            <span uk-search-icon=\"true\" className=\"uk-icon uk-search-icon\"></span>\r\n            <span \r\n                className=\"uk-search-icon uk-search-icon-flip\" \r\n                uk-spinner=\"ratio: 0.6\" \r\n                style={{visibility: isSearching ? '' : 'hidden'}}\r\n            ></span>\r\n            <input\r\n                className=\"uk-search-input\"\r\n                type=\"search\"\r\n                placeholder=\"Search...\"\r\n                onInput={(e)=>{\r\n                    setIsSearching(true);\r\n                    setSearchQuery(e.target.value);\r\n                }\r\n            }\r\n            />\r\n        </form>\r\n    )\r\n}   ","export const ToggleView = ({ viewGrid, viewList, setViewGrid, setViewList }) => {\r\n   \r\n        const grid = viewGrid ? 'uk-active' : '';\r\n        const list = viewList ? 'uk-active' : '';\r\n        \r\n        return (\r\n          <div className=\"uk-button-group uk-margin-left\">\r\n            <button\r\n              className={\"uk-button uk-button-default\" + grid}\r\n              onClick={() => {\r\n                setViewGrid(true); \r\n                setViewList(false)\r\n              }}\r\n            >\r\n              <span uk-icon=\"icon:  grid\"></span>\r\n            </button>\r\n            <button\r\n              className={\"uk-button uk-button-default\" + list}\r\n              onClick={() => {setViewGrid(false); setViewList(true)\r\n              }}\r\n            >\r\n              <span uk-icon=\"icon:  list\"></span>\r\n            </button>\r\n          </div>\r\n        )\r\n      }","import { OrderPosts } from './OrderPosts';\r\nimport { PostsLimit } from './PostsLimit';\r\nimport { Search } from './Search';\r\nimport { ToggleView } from './ToggleView';\r\n\r\nexport const NavBar = ( {\r\n    setSortOrder, \r\n    setlimitPosts, \r\n    setIsSearching, \r\n    isSearching, \r\n    setSearchQuery,\r\n    viewGrid,\r\n    setViewGrid,\r\n    viewList,\r\n    setViewList\r\n} ) => {\r\n    return ( \r\n        <> \r\n            <Search \r\n                setIsSearching={setIsSearching}\r\n                isSearching={isSearching}\r\n                setSearchQuery={setSearchQuery}\r\n            />\r\n            <OrderPosts setSortOrder={setSortOrder}/>\r\n            <PostsLimit setlimitPosts={setlimitPosts}/>\r\n\r\n            <ToggleView \r\n                viewGrid={viewGrid}\r\n                setViewGrid={setViewGrid}\r\n                viewList={viewList}\r\n                setViewList={setViewList}\r\n            />\r\n        </>\r\n    )\r\n};","import { Link } from 'react-router-dom';\r\nimport { useFavItems } from '../../FavItemsContext';\r\n\r\nexport const ListPostsItem = ( {title, body, id, isColor} ) => {\r\n  const { favPosts, setFavPosts } = useFavItems();\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"uk-card uk-card-default uk-margin-medium-bottom uk-child-width-1-2@s uk-grid-collapse uk-margin uk-grid\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div className=\"uk-card-media-left uk-cover-container uk-first-column\">\r\n          <img src=\"https://picsum.photos/600/400\" alt=\"\" className=\"uk-cover\" />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>\r\n        <div className=\"\">\r\n          <div className=\"uk-card-body\">\r\n              <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n                {`${title.slice(0, 6)}...`} \r\n                <a\r\n                  className=\"uk-icon-link\"\r\n                  uk-icon=\"heart\"\r\n                  style={{'cursor': 'pointer', color: isColor ? 'red' : ''}}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    favPosts.filter(el => el.id === id ).length === 0  \r\n                    ? setFavPosts([...favPosts, {id, title, body, userId: Date.now()}])\r\n                    : \"\";\r\n                }}\r\n                style={{'cursor': 'pointer', color: isColor ? 'red' : ''}}\r\n              > </a>\r\n              </h3>  \r\n            <p>\r\n              {`${body.slice(0, 70)}...`}\r\n            </p>\r\n            <Link\r\n              to={`/posts/${id}`}\r\n              className=\"uk-button uk-button-text\"\r\n            >Read more</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    ) \r\n} ","import { useFavItems } from '../../FavItemsContext';\r\nimport { ListPostsItem } from \"./ListPostsItem\";\r\n\r\nexport const ListPosts = ( {posts} ) => {\r\n    const { favPosts } = useFavItems();\r\n    const colors = posts.map(post => favPosts.some(el => (el.id == post.id)));\r\n\r\n    return (\r\n        <>\r\n            {posts.map((post, index) => {\r\n                return <ListPostsItem \r\n                    isColor={colors[index]}\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    title={post.title}\r\n                    body={post.body}\r\n                />\r\n            })}\r\n        </>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport { useFavItems } from '../../FavItemsContext';\r\n\r\nexport const GridPostsItem = ( {title, body, id, isColor} ) => {\r\n  const { favPosts, setFavPosts } = useFavItems();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"uk-card uk-card-default uk-margin-medium-bottom\">\r\n          <div className=\"uk-card-header\">\r\n            <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n              {title && `${title.slice(0, 10)}...`}\r\n              <a\r\n                className=\"uk-icon-link\"\r\n                uk-icon=\"heart\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  favPosts.filter(el => el.id === id ).length === 0  \r\n                  ? setFavPosts([...favPosts, {id, title, body, userId: Date.now()}])\r\n                  : \"\";\r\n                }}\r\n                style={{'cursor': 'pointer', color: isColor ? 'red' : ''}}\r\n              > </a>\r\n            </h3>\r\n          </div>\r\n          <div className=\"uk-card-body\">\r\n            <p>{`${body?.slice(0, 100)}...`}</p>\r\n          </div>\r\n          <div className=\"uk-card-footer\">\r\n            <Link\r\n              to={`/posts/${id}`}\r\n              className=\"uk-button uk-button-text\" \r\n            >Read more</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n} \r\n\r\n","import { useFavItems } from '../../FavItemsContext';\r\nimport { GridPostsItem } from './GridPostsItem';\r\n\r\nexport const GridPosts = ( {posts} ) => {\r\n    const { favPosts } = useFavItems();\r\n    const colors = posts.map(post => favPosts.some(el => (el.id == post.id)));\r\n\r\n    return (\r\n        <>\r\n            {posts.map((post, index) => {\r\n                return <GridPostsItem \r\n                    isColor={colors[index]}\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    title={post.title}\r\n                    body={post.body} \r\n                />\r\n                })\r\n            }\r\n        </>   \r\n    )  \r\n}","const fetcher = async (pathname, options = {}) => {\r\n    if(!process.env.REACT_APP_API_URL) {\r\n        console.log(\"environment variable is missing\")\r\n    }\r\n\r\n    try { \r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}${pathname}`, {  \r\n            method: 'GET',\r\n            headers: { 'Accept': 'application/json','Content-Type': 'application/json',},\r\n            ...options \r\n        })\r\n   \r\n        const meta = {};\r\n\r\n        const total = resp.headers.get(\"X-Total-Count\") \r\n\r\n        const links = resp.headers.get('Link')\r\n\r\n        // console.log(links)\r\n\r\n        // if(total) {\r\n        //     meta.total = total;\r\n        // }\r\n\r\n        if(links) {\r\n            meta.links = links\r\n        }\r\n\r\n        const data = await resp.json();\r\n\r\n        return {\r\n            data,\r\n            meta\r\n        }\r\n\r\n    } catch(error) {\r\n        throw error\r\n    };\r\n};\r\n\r\nexport default fetcher; \r\n","import fetcher from \"../utils/fetcher\"\r\n\r\nconst sortPosts = async (limit , order = 'asc') => {\r\n    //   console.log(\"sortPosts\")\r\n    return await fetcher(`/posts?_limit=${limit}&_sort=id&_order=${order}`)\r\n}\r\n\r\nconst serchPosts = async (limit , page = '1', order = 'asc', title = '') => {\r\n    //   console.log(\"serchPosts\")\r\n    return await fetcher(`/posts?_limit=${limit}&_page=${page}&_sort=id&_order=${order}&title_like=${title}`)\r\n}\r\n \r\nconst getPostDetails = async (id) => {\r\n    // console.log(\"getPostDetails\")\r\n    return await fetcher(`/posts?id=${id}`)\r\n}\r\n\r\nconst getPostComments = async (id) => {\r\n    // console.log(\"getPostComments\")\r\n    return await fetcher(`/comments?postId=${id}`)\r\n}\r\n\r\nconst getAlbums = async (limit) => {\r\n    // console.log(\"getAlbums\")\r\n    return await fetcher(`/albums?_limit=${limit}`)\r\n}\r\n\r\nconst getMoreItems = async (url, start, end, order) => {\r\n    // console.log(\"getMoreItems\")\r\n    return await fetcher(`${url}?_start=${start}&_end=${end}&_sort=id&_order=${order}`)\r\n}\r\n\r\nconst getAllItems = async (url) => {\r\n    return await fetcher(`${url}`)\r\n}\r\n\r\nexport {\r\n    getAlbums,\r\n    sortPosts,\r\n    serchPosts,\r\n    getPostDetails,\r\n    getPostComments,\r\n    getMoreItems,\r\n    getAllItems\r\n}","export const LoadMoreBtn = ({isLoading, setIsLoading, limit, currentNum, setCurrentNum}) => {\r\n    return (\r\n        <div className=\"uk-margin\">\r\n          <button\r\n            className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\"\r\n            onClick={() => {\r\n              setIsLoading(true);\r\n              setCurrentNum(Number(currentNum) + Number(limit))\r\n            }}\r\n          >Load more\r\n            <div\r\n              className=\"uk-margin-small-left\"\r\n              uk-spinner=\"ratio: 0.6\"\r\n              style={{visibility: isLoading ? '' : 'hidden'}}\r\n            ></div>\r\n          </button>\r\n        </div>\r\n      )\r\n}  ","export const Pagination = ({total, limit, page, setPage}) => {\r\n  const pagesArr = [];\r\n  for (let i = 1; i <= Math.ceil(total/limit); i++) {\r\n    pagesArr.push(i)\r\n  }\r\n  return (\r\n    <ul className=\"uk-pagination uk-flex-center uk-flex-middle uk-margin\">\r\n      <li>\r\n        {page > 1 &&\r\n        <a\r\n          href=\"/\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setPage(page - 1)\r\n          }}\r\n        ><span className=\"uk-icon uk-pagination-previous\" uk-pagination-previous=\"true\"></span></a>\r\n        }\r\n      </li>\r\n\r\n      {pagesArr.map(el => {\r\n        if(el === page) {\r\n          return  <li key={el} className=\"uk-active\"><span>{el}</span></li>\r\n        }\r\n        return <li key={el}>\r\n            <a \r\n              href=\"/\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setPage(el)\r\n              }}\r\n            >{el}</a>\r\n          </li>\r\n        })}\r\n      <li>\r\n        {page < pagesArr.length &&\r\n        <a\r\n          href=\"/\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setPage(page + 1)\r\n          }}\r\n        ><span className=\"uk-icon uk-pagination-next\" uk-pagination-next=\"true\"></span></a>\r\n        }\r\n      </li>\r\n    </ul>\r\n  )\r\n} ","import { useState, useEffect, useRef } from \"react\";\r\nimport { LoadMoreBtn } from './LoadMoreBtn';\r\nimport { Pagination } from './Pagination';\r\nimport { getMoreItems } from \"../../api\";\r\n\r\nexport const Footer = ({\r\n        limit = 6, \r\n        currentNumOfItems, \r\n        setCurrentNumOfItems, \r\n        order, \r\n        data, \r\n        setItems,\r\n        total,\r\n        page,\r\n        setPage\r\n    }) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currentNum, setCurrentNum] = useState(currentNumOfItems);\r\n    const url = location.pathname;\r\n    const initialRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n\r\n        if(initialRender.current) {\r\n            initialRender.current = false\r\n        } else {\r\n            getMoreItems(url, currentNum, Number(currentNum) + Number(limit), order = \"acs\").then(\r\n                items => setItems([...data, ...items.data])              \r\n            )\r\n\r\n            setCurrentNumOfItems(currentNum)\r\n            setTimeout(()=>{setIsLoading(false)}, 1000)\r\n            // setIsLoading(false)\r\n        }\r\n\r\n    }, [currentNum])\r\n\r\n    return (\r\n         <div className=\"uk-margin uk-container\">\r\n        <Pagination \r\n            total={total}\r\n            limit={limit}\r\n            page={page}\r\n            setPage={setPage}\r\n        />\r\n        <LoadMoreBtn\r\n            isLoading={isLoading}\r\n            setIsLoading={setIsLoading}\r\n            limit={limit}\r\n            currentNum={currentNum}\r\n            setCurrentNum={setCurrentNum}\r\n        />\r\n    </div>   \r\n    )\r\n}","import { useState, useEffect, useRef } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport { ListPosts } from \"../components/Posts/ListPosts\";\r\nimport { GridPosts } from \"../components/Posts/GridPosts\";\r\nimport { sortPosts, serchPosts, getAllItems } from \"../api\";\r\nimport { useDebounce } from \"../hooks/useDebounce\";\r\nimport { Footer } from \"../components/Footer\";\r\n\r\nconst PostsPage = () => { \r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [pagePosts, setPagePosts] = useState(1); \r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [limitPosts, setlimitPosts] = useState(6);\r\n  const [currentNumOfPosts, setCurrentNumOfPosts] = useState(limitPosts);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [viewGrid, setViewGrid] = useState(true);\r\n  const [viewList, setViewList] = useState(false);\r\n  const [totalPosts, setTotalPosts] = useState();\r\n  const initialPostsRender = useRef(true);\r\n  const debouncedValue = useDebounce(searchQuery, 500);\r\n\r\n  useEffect(() => {\r\n      sortPosts(limitPosts, sortOrder)\r\n        .then(posts => {setPosts(posts.data)})    \r\n  }, [sortOrder, limitPosts])\r\n\r\n  useEffect(()=>{\r\n    if (initialPostsRender.current) {\r\n      initialPostsRender.current = false\r\n    } else {\r\n      serchPosts(limitPosts, pagePosts, sortOrder, debouncedValue)\r\n        .then(posts => setPosts(posts.data))\r\n        setTimeout(()=>{setIsSearching(false)}, 1500)\r\n        // setIsSearching(false)\r\n    }\r\n  }, [searchQuery, pagePosts])\r\n\r\n  useEffect(()=>{\r\n    getAllItems(location.pathname)\r\n      .then(posts => setTotalPosts(posts.data.length))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"uk-section\">\r\n      <div className=\"uk-container\">\r\n          <div className=\"uk-margin-medium-bottom uk-flex\">\r\n            <NavBar \r\n              setSortOrder={setSortOrder} \r\n              setlimitPosts={setlimitPosts}\r\n              isSearching={isSearching}\r\n              setIsSearching={setIsSearching}\r\n              setSearchQuery={setSearchQuery} \r\n              viewGrid={viewGrid}\r\n              setViewGrid={setViewGrid}\r\n              viewList={viewList}\r\n              setViewList={setViewList}\r\n            />\r\n          </div>\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n          {\r\n            viewGrid \r\n            ? <GridPosts posts={posts} /> \r\n            : <ListPosts posts={posts} />\r\n          }\r\n          </div>\r\n      </div>\r\n      <Footer \r\n        limit={limitPosts}\r\n        currentNumOfItems={currentNumOfPosts}\r\n        setCurrentNumOfItems={setCurrentNumOfPosts}\r\n        order={sortOrder}\r\n        data={posts}\r\n        setItems={setPosts}\r\n        total={totalPosts}\r\n        page={pagePosts}\r\n        setPage={setPagePosts}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PostsPage);","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = ( val, delay) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(val);\r\n\r\n    useEffect(()=>{\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(val);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n\r\n    }, [val, delay]);\r\n\r\n    return debouncedValue;\r\n};","import { useFavItems } from '../../FavItemsContext';\r\n\r\nexport const AlbumItem = ( {id, title, isColor} ) => {\r\n    const { favAlbums, setFavAlbums } = useFavItems();\r\n    return (\r\n        <div>\r\n            <div className=\"uk-card uk-card-default uk-margin-medium-bottom uk-light\">\r\n                <img src=\"https://picsum.photos/600/400\" alt=\"\" className=\"uk-cover\" width=\"100%\" />\r\n                <canvas width=\"600\" height=\"400\"></canvas>\r\n                <div className=\"uk-overlay-primary uk-position-cover\"></div>\r\n                <div className=\"uk-overlay uk-overlay-primary uk-position-bottom\">\r\n                    <p> {title} </p>\r\n                </div>\r\n                \r\n                <div className=\"uk-position-top-right uk-overlay\">\r\n                    <a \r\n                        href=\"\" \r\n                        className=\"uk-icon\" \r\n                        uk-icon=\"icon: heart; ratio: 2\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            favAlbums.filter(el => el.id === id ).length === 0  \r\n                            ? setFavAlbums([...favAlbums, {id, title, userId: Date.now()}])\r\n                            : \"\";\r\n                          }}\r\n                          style={{'cursor': 'pointer', color: isColor ? 'red' : ''}}\r\n                    ></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useFavItems } from '../../FavItemsContext';\r\nimport { AlbumItem } from \"./AlbumItem\";\r\n\r\nexport const ListAlbums = ( {albums} ) => {\r\n    const { favAlbums } = useFavItems();\r\n    const colors = albums.map(album => favAlbums.some(el => (el.id == album.id)));\r\n    return (\r\n        <>\r\n            {albums.map((album, index) => {\r\n                return <AlbumItem \r\n                    isColor={colors[index]}\r\n                    key={album.id}\r\n                    title={album.title}\r\n                    id={album.id}\r\n                />\r\n            })}\r\n        </>\r\n        )\r\n}","import { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { ListAlbums } from \"../components/Albums/ListAlbums\";\r\nimport { getAlbums } from \"../api\";\r\nimport { Footer } from \"../components/Footer\";\r\n\r\n\r\nconst AlbumsPage = () => {\r\n    const [albums, setAlbums] = useState([]);\r\n    const [limitAlbums, setlimitAlbums] = useState(6);\r\n    const [currentNumOfAlbums, setCurrentNumOfAlbums] = useState(limitAlbums);\r\n\r\n    useEffect(() => {\r\n      getAlbums(limitAlbums).then(\r\n        albums => {\r\n          setAlbums(albums.data);\r\n        } \r\n      )\r\n}, [])\r\n\r\n    return (\r\n        <div className=\"uk-section\">\r\n            <div className=\"uk-container\">  \r\n                <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n                    <ListAlbums albums={albums}/>\r\n                </div>\r\n            </div>\r\n            <Footer \r\n              limit={limitAlbums}\r\n              currentNumOfItems={currentNumOfAlbums}\r\n              setCurrentNumOfItems={setCurrentNumOfAlbums}\r\n              data={albums}\r\n              setItems={setAlbums}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n  \r\nexport default React.memo(AlbumsPage);","export const Comments = ({ comments }) => {\r\n  return (\r\n    <div className=\"uk-comments\">\r\n      {comments?.map(comment => (\r\n        <article key={`${comment.id}comment`} className=\"uk-comment\">\r\n          <header className=\"uk-comment-header uk-grid uk-grid-medium uk-flex-middle\">\r\n            <div className=\"uk-width-expand\">\r\n              <h4 className=\"uk-comment-title uk-margin-remove\">\r\n                <a\r\n                  className=\"uk-link-reset\"\r\n                  href=\"/\"\r\n                  onClick={e => e.preventDefault()}\r\n                >{comment.name.toUpperCase().slice(0,10)}</a>\r\n              </h4>\r\n              <ul className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\r\n                <li><a href=\"/\">{comment.email}</a></li>\r\n              </ul>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-comment-body\">\r\n            <p>{comment.body}</p>\r\n          </div>\r\n          <hr />\r\n        </article>\r\n      ))}\r\n    </div>\r\n  )\r\n};","import { useState } from \"react\";\r\n\r\nexport const NewComment = ({comments, setComments}) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  return (\r\n    <form\r\n      action=\"#\"\r\n      className=\"uk-comment-form uk-margin-medium-top\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n\r\n        const comment = {\r\n          name: userName,\r\n          email: userEmail,\r\n          body: commentText\r\n        }\r\n        setComments([...comments, comment])\r\n        e.target.reset();\r\n      }}\r\n    >\r\n      <fieldset className=\"uk-fieldset\">\r\n          <legend className=\"uk-legend\">Add Comment</legend>\r\n          <div className=\"uk-margin\">\r\n            <input\r\n              className=\"uk-input\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              required\r\n              onInput={e => setUserName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"uk-margin\">\r\n            <input\r\n              className=\"uk-input\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n              onInput={e => setUserEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"uk-margin\">\r\n            <textarea\r\n              className=\"uk-textarea\"\r\n              rows=\"5\"\r\n              placeholder=\"Comment\"\r\n              required\r\n              onInput={e => setCommentText(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"uk-margin\">\r\n            <button \r\n              className=\"uk-button uk-button-primary\" \r\n              type=\"submit\"\r\n            >Post Comment</button>\r\n          </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getPostDetails, getPostComments } from '../api';\r\nimport { Comments } from '../components/PostDetails/Comments';\r\nimport { NewComment } from '../components/PostDetails/NewComment';\r\n\r\nexport const PostDetailsPage = ({\r\n  match: {\r\n    params: { id }\r\n  }\r\n}) => {\r\n  const [currentPost, setCurrentPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPostDetails(id).then(\r\n      post => setCurrentPost(post.data[0])\r\n    )\r\n\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    getPostComments(id).then(\r\n      comments => setComments(comments.data)\r\n    )\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"uk-section\">\r\n      <div className=\"uk-container\">\r\n        <button\r\n          className=\"uk-button uk-button-primary\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            history.back()\r\n          }}\r\n        >Back</button>\r\n        <h1 className=\"uk-heading-bullet uk-margin-medium-bottom\">\r\n          <span>{currentPost.title}</span>\r\n          <a className=\"uk-text-small\" href=\"/\">{` Author-${currentPost.userId}`}</a>\r\n        </h1>\r\n        <div className=\"uk-article uk-dropcap uk-margin-large-bottom\">\r\n          <p>{currentPost.body}</p>\r\n        </div>\r\n        <hr />\r\n        <h3 className=\"uk-margin-remove-top\">Comments:</h3>\r\n        <Comments comments={comments} />\r\n        <NewComment \r\n          comments={comments}\r\n          setComments={setComments}/>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { HeaderApp } from \"./components/HeaderApp\";\nimport  PostsPage  from \"./conteiners/PostsPage\";\nimport  AlbumsPage  from \"./conteiners/AlbumsPage\";\nimport { PostDetailsPage } from \"./conteiners/PostDetailsPage\";\nimport { FavItemsProvider } from \"./FavItemsContext\";\n\nexport default function App() {\n\n  return (\n    <main className=\"uk-main\">\n      <FavItemsProvider>\n        <BrowserRouter>\n          <HeaderApp/>\n          <Switch>\n            <Route exact path=\"/posts\" component={PostsPage}/>\n            <Route path=\"/albums\" component={AlbumsPage}/>\n            <Route path='/posts/:id' component={PostDetailsPage}/>\n            <Redirect to=\"/posts\" />\n          </Switch>\n        </BrowserRouter>\n      </FavItemsProvider>\n    </main>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}